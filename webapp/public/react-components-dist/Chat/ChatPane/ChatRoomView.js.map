{"version":3,"file":"ChatRoomView.js","names":["React","PropTypes","FaSolidIcon","ChatRoomMessage","WrapperStyle","backgroundColor","maxHeight","MESSAGE_FETCH_LIMIT","CHAT_UPDATE_MESSAGES","CHAT_SCROLL_TO_BOTTOM","CHAT_READ_EVT","NEW_CHAT_MESSAGE_EVT","ChatRoomView","_React$Component","props","_this","_classCallCheck","_callSuper","_defineProperty","_","shouldUpdateMessageList","setTimeout","fetchNewMessages","fetchNewMessagesLoop","id_chat_room","roomId","fetchInitialMessages","state","messages","length","_ref","target","sendingMessage","setState","name","value","msg","text","messagesNum","getMessageAPI","then","data","reverse","afterCursor","cursors","after","beforeCursor","before","scrollToBottom","silent","onStateUpdate","newMessagesList","_toConsumableArray","map","m","find","mm","message_id","push","setReadAPI","FuxEvents","emit","saveScrollPoint","e","preventDefault","handleSendMessage","sendMessage","inputRef","current","focus","sendMessageAPI","_ref2","otp","sendNotificationAPI","message","FuxSwalUtility","error","room_id","messageList","slice","is_read","scrollPaneRef","scrollTop","scrollHeight","curScrollPos","oldScroll","clientHeight","newScroll","isRecording","createRef","_inherits","_createClass","key","componentDidMount","on","fetchMessageEventName","handleExternalNewMessage","handleUpdateMessages","handleExternalTextMessage","componentWillUnmount","off","componentDidUpdate","prevProps","prevState","snapshot","restoreScrollPoint","render","_this2","createElement","className","style","ref","onClick","sendInitialMessage","fetchOldMessages","i","prevMessage","nextMessage","isLast","sender_id","showOwnDate","moment","created_at","format","messageData","messageProcessor","widget","messageWidgetRenderer","idSelf","getMediaContentUrlAPI","messageListFooter","onSubmit","handleInputFormSubmit","type","autoComplete","onChange","handleInputChange","placeholder","width","height","disabled","disableSend","Component","propTypes","any","isRequired","func","string","showAttachmentsButton","bool","element","defaultProps","showAudioRecordingButton"],"sources":["../../../react-components/Chat/ChatPane/ChatRoomView.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {FaSolidIcon} from \"../../FontAwesome/FontAwesome\";\nimport {ChatRoomMessage} from \"./Message/ChatRoomMessage\";\n\nconst WrapperStyle = {\n    backgroundColor: \"#dadde1\",\n    maxHeight: 'calc(100vh - 116px )'\n}\n\nconst MESSAGE_FETCH_LIMIT = 20;\nconst CHAT_UPDATE_MESSAGES = 'CHAT_UPDATE_MESSAGES';\nexport const CHAT_SCROLL_TO_BOTTOM = 'CHAT_SCROLL_TO_BOTTOM';\nexport var CHAT_READ_EVT = 'CHAT_READ_EVT';\nexport var NEW_CHAT_MESSAGE_EVT = 'NEW_CHAT_MESSAGE_EVT';\n\nexport class ChatRoomView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            messages: [],\n            afterCursor: null,\n            beforeCursor: null,\n            sendingMessage: false,\n            isRecording: false,\n        }\n\n        this.inputRef = React.createRef();\n        this.scrollPaneRef = React.createRef();\n        this.shouldUpdateMessageList = true;\n    }\n\n    componentDidMount() {\n        FuxEvents.on(this.props.fetchMessageEventName, this.handleExternalNewMessage);\n        FuxEvents.on(CHAT_UPDATE_MESSAGES, this.handleUpdateMessages);\n        FuxEvents.on(CHAT_SCROLL_TO_BOTTOM, this.scrollToBottom);\n        FuxEvents.on('__chat_message__', this.handleExternalTextMessage);\n        this.fetchInitialMessages(MESSAGE_FETCH_LIMIT);\n        this.fetchNewMessagesLoop()\n    }\n\n    componentWillUnmount() {\n        FuxEvents.off(this.props.fetchMessageEventName, this.handleExternalNewMessage);\n        FuxEvents.off(CHAT_UPDATE_MESSAGES, this.handleUpdateMessages);\n        FuxEvents.off(CHAT_SCROLL_TO_BOTTOM, this.scrollToBottom);\n        FuxEvents.off('__chat_message__', this.handleExternalTextMessage);\n        this.shouldUpdateMessageList = false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //Riposiziona lo scroll del div alla posizione originale prima di aver preso messaggi piÃ¹ vecchi\n        if (this.oldScroll !== null && this.curScrollPos !== null) {\n            this.restoreScrollPoint();\n        }\n    }\n\n    fetchNewMessagesLoop = _ => {\n        if (this.shouldUpdateMessageList) {\n            setTimeout(_ => {\n                this.fetchNewMessages(false, this.fetchNewMessagesLoop);\n            }, 3000);\n        }\n    }\n\n    handleUpdateMessages = id_chat_room => {\n        if (id_chat_room === this.props.roomId) {\n            this.fetchInitialMessages(this.state.messages.length);\n        }\n    }\n\n    handleInputChange = ({target}) => {\n        if (this.state.sendingMessage) return;\n        this.setState({[target.name]: target.value});\n    }\n    handleExternalTextMessage = (msg) => this.setState({text: msg});\n\n    fetchInitialMessages = messagesNum => {\n        this.props.getMessageAPI(this.props.roomId, messagesNum, null)\n            .then(data => {\n                this.setState({\n                    messages: data.messages.reverse(),\n                    afterCursor: data.cursors.after,\n                    beforeCursor: data.cursors.before,\n                }, this.scrollToBottom);\n            });\n    }\n\n    fetchNewMessages = (silent, onStateUpdate) => {\n        return this.props.getMessageAPI(this.props.roomId, MESSAGE_FETCH_LIMIT, this.state.afterCursor)\n            .then(data => {\n                if (data.messages.length) {\n                    const newMessagesList = [...this.state.messages];\n                    data.messages.reverse().map(m => {\n                        if (!newMessagesList.find(mm => mm.message_id === m.message_id)) newMessagesList.push(m)\n                    })\n                    this.setState({\n                        messages: newMessagesList,\n                        afterCursor: data.cursors.after, //Aggiorno solo il cursore after\n                    }, _ => {\n                        if (!silent) this.scrollToBottom();\n                        if (onStateUpdate) onStateUpdate();\n                        if (this.props.setReadAPI) this.props.setReadAPI(this.props.roomId).then(_ => FuxEvents.emit(CHAT_READ_EVT));\n                    });\n                } else {\n                    if (onStateUpdate) onStateUpdate();\n                }\n            });\n    }\n\n    fetchOldMessages = _ => {\n        return this.props.getMessageAPI(this.props.roomId, MESSAGE_FETCH_LIMIT, this.state.beforeCursor)\n            .then(data => {\n                this.saveScrollPoint();\n                const newMessagesList = [...data.messages.reverse()];\n                this.state.messages.map(m => {\n                    if (!newMessagesList.find(mm => mm.message_id === m.message_id)) newMessagesList.push(m)\n                });\n                this.setState({\n                    messages: newMessagesList,\n                    beforeCursor: data.cursors.before, //Aggiorno solo il cursore after\n                });\n            });\n    }\n\n    handleInputFormSubmit = e => {\n        e.preventDefault();\n        this.handleSendMessage();\n    }\n\n    handleSendMessage = _ => {\n        this.sendMessage(this.state.text);\n    }\n\n    sendMessage = (text) => {\n        this.setState({sendingMessage: true});\n        this.inputRef.current.focus();\n        this.props.sendMessageAPI(this.props.roomId, text)\n            .then(({message_id, otp}) => {\n                if (this.props.sendNotificationAPI) this.props.sendNotificationAPI(this.props.roomId, message_id, otp);\n                this.fetchNewMessages()\n                    .then(_ => {\n                        this.setState({\n                            sendingMessage: false,\n                            text: '',\n                        });\n                    });\n            })\n            .catch(message => {\n                FuxSwalUtility.error(message);\n                this.setState({sendingMessage: false});\n            });\n    }\n\n    sendInitialMessage = _ => this.sendMessage(\"Ciao!\");\n\n    handleExternalNewMessage = room_id => {\n        if (room_id === this.props.roomId) {\n            this.fetchNewMessages(false, _ => {\n                const messageList = this.state.messages.slice().map(m => {\n                    m.is_read = \"1\";\n                    return m;\n                });\n                this.setState({messages: messageList});\n            });\n            if (this.props.setReadAPI) this.props.setReadAPI(this.props.roomId);\n        }\n    }\n\n    /** @MARK: Scroll utilities */\n\n    scrollToBottom = _ => {\n        if (this.scrollPaneRef.current) {\n            this.scrollPaneRef.current.scrollTop = this.scrollPaneRef.current.scrollHeight;\n        }\n    }\n\n    saveScrollPoint = _ => {\n        if (this.scrollPaneRef.current) {\n            this.curScrollPos = this.scrollPaneRef.current.scrollTop;\n            this.oldScroll = this.scrollPaneRef.current.scrollHeight - this.scrollPaneRef.current.clientHeight;\n        }\n    }\n\n    restoreScrollPoint = _ => {\n        if (this.oldScroll !== null && this.curScrollPos !== null) {\n            const newScroll = this.scrollPaneRef.current.scrollHeight - this.scrollPaneRef.current.clientHeight;\n            this.scrollPaneRef.current.scrollTop = this.curScrollPos + (newScroll - this.oldScroll);\n            this.oldScroll = null;\n            this.curScrollPos = null;\n        }\n    }\n\n\n    render() {\n        return (\n            <div className={\"d-flex flex-column h-100\"} style={WrapperStyle}>\n                <div className={\"px-3 overflow-auto py-4 flex-grow-1\"} ref={this.scrollPaneRef}>\n                    {\n                        !this.state.messages.length &&\n                        <p className={\"w-75 mx-auto text-center lead\"}>\n                            Inizia la tua conversazione, invia un saluto a Italo! <br/>\n                            <button className={\"btn btn-primary\"} onClick={this.sendInitialMessage}>Ciao! ðð»</button>\n                        </p>\n                    }\n                    {\n                        !!this.state.beforeCursor &&\n                        <div className={\"text-center\"} onClick={this.fetchOldMessages}>\n                            <button className={\"btn btn-sm btn-link text-primary\"}>\n                                Carica messaggi precedenti\n                            </button>\n                        </div>\n                    }\n                    {\n                        this.state.messages.map((m, i) => {\n                            const prevMessage = i === 0 ? null : this.state.messages[i - 1];\n                            const nextMessage = i === this.state.messages.length - 1 ? null : this.state.messages[i + 1];\n                            const isLast = !nextMessage || nextMessage.sender_id !== m.sender_id;\n\n                            const showOwnDate = !prevMessage || moment(prevMessage.created_at).format('DD-MM-YYYY') !== moment(m.created_at).format('DD-MM-YYYY');\n                            const messageData = this.props.messageProcessor ? this.props.messageProcessor(m) : m;\n                            const widget = this.props.messageWidgetRenderer ? this.props.messageWidgetRenderer(m, i == this.state.messages.length - 1) : null;\n                            return <ChatRoomMessage\n                                key={m.message_id}\n                                messageData={messageData}\n                                idSelf={this.props.idSelf}\n                                isLast={isLast}\n                                showOwnDate={showOwnDate}\n                                getMediaContentUrlAPI={this.props.getMediaContentUrlAPI}\n                                widget={widget}\n                            />\n                        })\n                    }\n                    {this.props.messageListFooter}\n                </div>\n                <div className={\"bg-white shadow-sm p-2 border-top \" + (!this.state.messages.length && 'd-none')}>\n                    <div className={\"d-flex align-items-center\"}>\n                        <form onSubmit={this.handleInputFormSubmit}\n                              className={this.state.isRecording ? 'd-none' : 'flex-grow-1'}>\n                            <div className={\"d-flex align-items-center\"}>\n                                <input\n                                    ref={this.inputRef}\n                                    className={\"form-control rounded-pill\"}\n                                    type={\"text\"}\n                                    name={\"text\"}\n                                    autoComplete={\"off\"}\n                                    value={this.state.text}\n                                    onChange={this.handleInputChange}\n                                    onSubmit={this.handleSendMessage}\n                                    placeholder={\"Scrivi un messaggio\"}\n                                />\n                                <div>\n                                    <button style={{width: 38, height: 38}}\n                                            className={\"btn btn-primary rounded-circle d-flex align-items-center justify-content-center ml-2\"}\n                                            disabled={!this.state.text || this.state.sendingMessage || this.props.disableSend}\n                                            onClick={this.handleSendMessage}>\n                                        {\n                                            this.state.sendingMessage ?\n                                                <FaSolidIcon name={\"spin\"} className={\"fa-spinner\"}/>\n                                                :\n                                                <FaSolidIcon name={\"paper-plane\"}/>\n                                        }\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nChatRoomView.propTypes = {\n    roomId: PropTypes.any.isRequired,\n    idSelf: PropTypes.any.isRequired,\n    getMessageAPI: PropTypes.func.isRequired,\n    getMediaContentUrlAPI: PropTypes.func.isRequired,\n    sendMessageAPI: PropTypes.func.isRequired,\n    setReadAPI: PropTypes.func.isRequired,\n    sendNotificationAPI: PropTypes.func.isRequired,\n    fetchMessageEventName: PropTypes.string.isRequired,\n    showAttachmentsButton: PropTypes.bool,\n    messageProcessor: PropTypes.func,\n    messageWidgetRenderer: PropTypes.func,\n    messageListFooter: PropTypes.element,\n    disableSend: PropTypes.bool,\n}\n\nChatRoomView.defaultProps = {\n    showAudioRecordingButton: true,\n    showAttachmentsButton: true,\n    disableSend: false,\n}\n\n"],"mappings":"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","ignoreList":[]}