{"version":3,"file":"AiAssistantChatRoomView.js","names":["React","PropTypes","NEW_CHAT_MESSAGE_EVT","ChatRoomView","AiAssistantAPI","GenericListGroupWidget","ButtonsListWidget","DotTypingLoader","AiAssistantChatRoomTextBox","ASSISTANT_MODE_DECLARATIVE","RecipesListGroupWidget","ASSISTANT_MODE_LOCAL_STORAGE_KEY","AiAssistantChatRoomView","_React$Component","props","_this","_classCallCheck","_callSuper","_defineProperty","_","mode","setState","assistantMode","localStorage","setItem","room_id","limit","cursor","Promise","resolve","reject","User","getMessages","then","data","messages","length","assistantAnswered","sender_id","idSelf","m","_objectSpread","content","replace","RegExp","isLastMessage","indexOf","metadata","widgets","map","widget","type","semtype","createElement","onGeneratedPrompt","handleWidgetGeneratedPrompt","disabled","frontendPrompt","backendPrompt","sendTextMessage","roomId","FuxEvents","emit","state","className","text","attachments","assistant_specific_prompt","textBoxComponent","handleModeChange","getItem","_inherits","_createClass","key","value","render","Fragment","getMessageAPI","getMessageAPIGateway","getMediaContentUrlAPI","getMediaContentUrl","sendMessageAPI","sendMessageProxyAPI","setReadAPI","sendNotificationAPI","fetchMessageEventName","showAudioRecordingButton","showAttachmentsButton","messageProcessor","processMessageData","messageWidgetRenderer","widgetRenderer","messageListFooter","getMessageListFooter","disableSend","Component","propTypes","any"],"sources":["../../react-components/AiAssistant/AiAssistantChatRoomView.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {NEW_CHAT_MESSAGE_EVT, ChatRoomView} from \"../Chat/ChatPane/ChatRoomView\";\nimport {AiAssistantAPI} from \"../API/AiAssistant/AiAssistantAPI\";\nimport {GenericListGroupWidget} from \"./Widgets/Listgroup/GenericListGroupWidget\";\nimport {ButtonsListWidget} from \"./Widgets/ButtonsList/ButtonsListWidget\";\nimport {DotTypingLoader} from \"../BaseComponents/DotTypingLoader/DotTypingLoader\";\nimport {AiAssistantChatRoomTextBox, ASSISTANT_MODE_DECLARATIVE} from \"./AiAssistantChatRoomTextBox\";\nimport {\n    RecipesListGroupWidget\n} from \"../../react-components-dist/AiAssistant/Widgets/RecipesListgroup/RecipesListGroupWidget\";\n\n\nconst ASSISTANT_MODE_LOCAL_STORAGE_KEY = '__AI_ASSISTANT_MODE';\n\nexport class AiAssistantChatRoomView extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            assistantAnswered: true,\n            assistantMode: ''\n        }\n\n        this.textBoxComponent = AiAssistantChatRoomTextBox(this.handleModeChange, localStorage.getItem(ASSISTANT_MODE_LOCAL_STORAGE_KEY));\n    }\n\n    doNothing = _ => {\n    }\n\n    handleModeChange = mode => this.setState({assistantMode: mode}, _ => {\n        localStorage.setItem(ASSISTANT_MODE_LOCAL_STORAGE_KEY, mode);\n    });\n\n    /**\n     * This function is used as wrapper around the basic api for retrieving messages with the AI assistant. It allow\n     * us to get information about the message list and return back to the caller the results in a transparent way.\n     * */\n    getMessageAPIGateway = (room_id, limit, cursor) => {\n        return new Promise((resolve, reject) => {\n            AiAssistantAPI.User.getMessages(room_id, limit, cursor)\n                .then(data => {\n                    if (data.messages.length) {\n                        this.setState({assistantAnswered: data.messages[0].sender_id != this.props.idSelf});\n                    }\n                    resolve(data);\n                }).catch(reject);\n        })\n    }\n\n    processMessageData = m => ({...m, content: m.content.replace(new RegExp('\\{\\{widget\\}\\}', 'g'), '')});\n\n    widgetRenderer = (m, isLastMessage) => {\n        if (m.content.indexOf('{{widget}}') == -1) return '';\n        if (!m.metadata.widgets || !m.metadata.widgets.length) return '';\n\n        return m.metadata.widgets.map(widget => {\n            switch (widget.type) {\n                case 'list-group':\n                case 'custom-list-group':\n                    switch (widget.semtype) {\n                        case 'recipes':\n                            return <RecipesListGroupWidget widget={widget} onGeneratedPrompt={this.handleWidgetGeneratedPrompt}/>\n                        default:\n                            return <GenericListGroupWidget widget={widget} disabled={!isLastMessage}\n                                                           onGeneratedPrompt={this.handleWidgetGeneratedPrompt}/>\n                    }\n                case 'buttons-list':\n                    return <ButtonsListWidget widget={widget} disabled={!isLastMessage}\n                                              onGeneratedPrompt={this.handleWidgetGeneratedPrompt}\n                    />\n            }\n        });\n    }\n\n    handleWidgetGeneratedPrompt = (frontendPrompt, backendPrompt) => {\n        AiAssistantAPI.User.sendTextMessage(this.props.roomId, frontendPrompt, [], backendPrompt)\n            .then(_ => FuxEvents.emit(NEW_CHAT_MESSAGE_EVT, this.props.roomId));\n    }\n\n    getMessageListFooter = _ => {\n        if (this.state.assistantAnswered) return '';\n\n        return <div className={\"d-flex yours\"}>\n            <div className={\"message last\"}>\n                <DotTypingLoader/>\n            </div>\n        </div>\n    }\n\n    sendMessageProxyAPI = (room_id, text, attachments, assistant_specific_prompt) => AiAssistantAPI.User.sendTextMessage(room_id, text, attachments, assistant_specific_prompt, this.state.assistantMode)\n\n    render() {\n\n\n        return (\n            <React.Fragment>\n                <ChatRoomView\n                    roomId={this.props.roomId}\n                    idSelf={this.props.idSelf}\n                    getMessageAPI={this.getMessageAPIGateway}\n                    getMediaContentUrlAPI={AiAssistantAPI.User.getMediaContentUrl}\n                    sendMessageAPI={this.sendMessageProxyAPI}\n                    setReadAPI={null}\n                    sendNotificationAPI={null}\n                    fetchMessageEventName={NEW_CHAT_MESSAGE_EVT}\n                    showAudioRecordingButton={false}\n                    showAttachmentsButton={false}\n                    messageProcessor={this.processMessageData}\n                    messageWidgetRenderer={this.widgetRenderer}\n                    messageListFooter={this.getMessageListFooter()}\n                    textBoxComponent={this.textBoxComponent}\n                    disableSend={!this.state.assistantAnswered}\n                />\n            </React.Fragment>\n        )\n    }\n\n}\n\nAiAssistantChatRoomView.propTypes = {\n    roomId: PropTypes.any,\n    idSelf: PropTypes.any\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,oBAAoB,EAAEC,YAAY,QAAO,+BAA+B;AAChF,SAAQC,cAAc,QAAO,mCAAmC;AAChE,SAAQC,sBAAsB,QAAO,4CAA4C;AACjF,SAAQC,iBAAiB,QAAO,yCAAyC;AACzE,SAAQC,eAAe,QAAO,mDAAmD;AACjF,SAAQC,0BAA0B,EAAEC,0BAA0B,QAAO,8BAA8B;AACnG,SACIC,sBAAsB,QACnB,yFAAyF;AAGhG,IAAMC,gCAAgC,GAAG,qBAAqB;AAE9D,WAAaC,uBAAuB,0BAAAC,gBAAA;EAGhC,SAAAD,wBAAYE,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,uBAAA;IACfG,KAAA,GAAAE,UAAA,OAAAL,uBAAA,GAAME,KAAK;IAAEI,eAAA,CAAAH,KAAA,eASL,UAAAI,CAAC,EAAI,CACjB,CAAC;IAAAD,eAAA,CAAAH,KAAA,sBAEkB,UAAAK,IAAI;MAAA,OAAIL,KAAA,CAAKM,QAAQ,CAAC;QAACC,aAAa,EAAEF;MAAI,CAAC,EAAE,UAAAD,CAAC,EAAI;QACjEI,YAAY,CAACC,OAAO,CAACb,gCAAgC,EAAES,IAAI,CAAC;MAChE,CAAC,CAAC;IAAA;IAEF;AACJ;AACA;AACA;IAHIF,eAAA,CAAAH,KAAA,0BAIuB,UAACU,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAK;MAC/C,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACpC1B,cAAc,CAAC2B,IAAI,CAACC,WAAW,CAACP,OAAO,EAAEC,KAAK,EAAEC,MAAM,CAAC,CAClDM,IAAI,CAAC,UAAAC,IAAI,EAAI;UACV,IAAIA,IAAI,CAACC,QAAQ,CAACC,MAAM,EAAE;YACtBrB,KAAA,CAAKM,QAAQ,CAAC;cAACgB,iBAAiB,EAAEH,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACG,SAAS,IAAIvB,KAAA,CAAKD,KAAK,CAACyB;YAAM,CAAC,CAAC;UACvF;UACAV,OAAO,CAACK,IAAI,CAAC;QACjB,CAAC,CAAC,SAAM,CAACJ,MAAM,CAAC;MACxB,CAAC,CAAC;IACN,CAAC;IAAAZ,eAAA,CAAAH,KAAA,wBAEoB,UAAAyB,CAAC;MAAA,OAAAC,aAAA,CAAAA,aAAA,KAASD,CAAC;QAAEE,OAAO,EAAEF,CAAC,CAACE,OAAO,CAACC,OAAO,CAAC,IAAIC,MAAM,CAAC,gBAAgB,EAAE,GAAG,CAAC,EAAE,EAAE;MAAC;IAAA,CAAE;IAAA1B,eAAA,CAAAH,KAAA,oBAEpF,UAACyB,CAAC,EAAEK,aAAa,EAAK;MACnC,IAAIL,CAAC,CAACE,OAAO,CAACI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE;MACpD,IAAI,CAACN,CAAC,CAACO,QAAQ,CAACC,OAAO,IAAI,CAACR,CAAC,CAACO,QAAQ,CAACC,OAAO,CAACZ,MAAM,EAAE,OAAO,EAAE;MAEhE,OAAOI,CAAC,CAACO,QAAQ,CAACC,OAAO,CAACC,GAAG,CAAC,UAAAC,MAAM,EAAI;QACpC,QAAQA,MAAM,CAACC,IAAI;UACf,KAAK,YAAY;UACjB,KAAK,mBAAmB;YACpB,QAAQD,MAAM,CAACE,OAAO;cAClB,KAAK,SAAS;gBACV,oBAAOpD,KAAA,CAAAqD,aAAA,CAAC3C,sBAAsB;kBAACwC,MAAM,EAAEA,MAAO;kBAACI,iBAAiB,EAAEvC,KAAA,CAAKwC;gBAA4B,CAAC,CAAC;cACzG;gBACI,oBAAOvD,KAAA,CAAAqD,aAAA,CAAChD,sBAAsB;kBAAC6C,MAAM,EAAEA,MAAO;kBAACM,QAAQ,EAAE,CAACX,aAAc;kBACzCS,iBAAiB,EAAEvC,KAAA,CAAKwC;gBAA4B,CAAC,CAAC;YAC7F;UACJ,KAAK,cAAc;YACf,oBAAOvD,KAAA,CAAAqD,aAAA,CAAC/C,iBAAiB;cAAC4C,MAAM,EAAEA,MAAO;cAACM,QAAQ,EAAE,CAACX,aAAc;cACzCS,iBAAiB,EAAEvC,KAAA,CAAKwC;YAA4B,CAC7E,CAAC;QACV;MACJ,CAAC,CAAC;IACN,CAAC;IAAArC,eAAA,CAAAH,KAAA,iCAE6B,UAAC0C,cAAc,EAAEC,aAAa,EAAK;MAC7DtD,cAAc,CAAC2B,IAAI,CAAC4B,eAAe,CAAC5C,KAAA,CAAKD,KAAK,CAAC8C,MAAM,EAAEH,cAAc,EAAE,EAAE,EAAEC,aAAa,CAAC,CACpFzB,IAAI,CAAC,UAAAd,CAAC;QAAA,OAAI0C,SAAS,CAACC,IAAI,CAAC5D,oBAAoB,EAAEa,KAAA,CAAKD,KAAK,CAAC8C,MAAM,CAAC;MAAA,EAAC;IAC3E,CAAC;IAAA1C,eAAA,CAAAH,KAAA,0BAEsB,UAAAI,CAAC,EAAI;MACxB,IAAIJ,KAAA,CAAKgD,KAAK,CAAC1B,iBAAiB,EAAE,OAAO,EAAE;MAE3C,oBAAOrC,KAAA,CAAAqD,aAAA;QAAKW,SAAS,EAAE;MAAe,gBAClChE,KAAA,CAAAqD,aAAA;QAAKW,SAAS,EAAE;MAAe,gBAC3BhE,KAAA,CAAAqD,aAAA,CAAC9C,eAAe,MAAC,CAChB,CACJ,CAAC;IACV,CAAC;IAAAW,eAAA,CAAAH,KAAA,yBAEqB,UAACU,OAAO,EAAEwC,IAAI,EAAEC,WAAW,EAAEC,yBAAyB;MAAA,OAAK/D,cAAc,CAAC2B,IAAI,CAAC4B,eAAe,CAAClC,OAAO,EAAEwC,IAAI,EAAEC,WAAW,EAAEC,yBAAyB,EAAEpD,KAAA,CAAKgD,KAAK,CAACzC,aAAa,CAAC;IAAA;IAvEjMP,KAAA,CAAKgD,KAAK,GAAG;MACT1B,iBAAiB,EAAE,IAAI;MACvBf,aAAa,EAAE;IACnB,CAAC;IAEDP,KAAA,CAAKqD,gBAAgB,GAAG5D,0BAA0B,CAACO,KAAA,CAAKsD,gBAAgB,EAAE9C,YAAY,CAAC+C,OAAO,CAAC3D,gCAAgC,CAAC,CAAC;IAAC,OAAAI,KAAA;EACtI;EAACwD,SAAA,CAAA3D,uBAAA,EAAAC,gBAAA;EAAA,OAAA2D,YAAA,CAAA5D,uBAAA;IAAA6D,GAAA;IAAAC,KAAA,EAmED,SAAAC,MAAMA,CAAA,EAAG;MAGL,oBACI3E,KAAA,CAAAqD,aAAA,CAACrD,KAAK,CAAC4E,QAAQ,qBACX5E,KAAA,CAAAqD,aAAA,CAAClD,YAAY;QACTyD,MAAM,EAAE,IAAI,CAAC9C,KAAK,CAAC8C,MAAO;QAC1BrB,MAAM,EAAE,IAAI,CAACzB,KAAK,CAACyB,MAAO;QAC1BsC,aAAa,EAAE,IAAI,CAACC,oBAAqB;QACzCC,qBAAqB,EAAE3E,cAAc,CAAC2B,IAAI,CAACiD,kBAAmB;QAC9DC,cAAc,EAAE,IAAI,CAACC,mBAAoB;QACzCC,UAAU,EAAE,IAAK;QACjBC,mBAAmB,EAAE,IAAK;QAC1BC,qBAAqB,EAAEnF,oBAAqB;QAC5CoF,wBAAwB,EAAE,KAAM;QAChCC,qBAAqB,EAAE,KAAM;QAC7BC,gBAAgB,EAAE,IAAI,CAACC,kBAAmB;QAC1CC,qBAAqB,EAAE,IAAI,CAACC,cAAe;QAC3CC,iBAAiB,EAAE,IAAI,CAACC,oBAAoB,CAAC,CAAE;QAC/CzB,gBAAgB,EAAE,IAAI,CAACA,gBAAiB;QACxC0B,WAAW,EAAE,CAAC,IAAI,CAAC/B,KAAK,CAAC1B;MAAkB,CAC9C,CACW,CAAC;IAEzB;EAAC;AAAA,EAtGwCrC,KAAK,CAAC+F,SAAS;AA0G5DnF,uBAAuB,CAACoF,SAAS,GAAG;EAChCpC,MAAM,EAAE3D,SAAS,CAACgG,GAAG;EACrB1D,MAAM,EAAEtC,SAAS,CAACgG;AACtB,CAAC","ignoreList":[]}